$yellow: #ffe600;


* {
  font-family: Cambay;
}

@keyframes zoomInUp {
    from {
      opacity: 0;
      transform: scale3d(.1, .1, .1) translate3d(0, 1000px, 0);
      animation-timing-function: cubic-bezier(0.550, 0.055, 0.675, 0.190);
    }

    60% {
      opacity: 1;
      transform: scale3d(.475, .475, .475) translate3d(0, -60px, 0);
      animation-timing-function: cubic-bezier(0.175, 0.885, 0.320, 1);
    }
  }

.container {
	max-width: 1200px;
	width: 90%;
	margin: 0 auto;
}

#portfolio-filter-component {
	.title {
		text-align: center;
	}

	.toolbar {
		display: flex;
		justify-content: center;
		flex-wrap: wrap;
		
		.btn-choose-cat {
			margin: 0 10px;
			font-size: 20px;
			background-color: #fff;
			border: 0;
			text-transform: uppercase;
			outline: none;

			&:hover {
     			color: $yellow;
     			transition: .1s;
     			cursor: pointer;
			}
		}

		.active-btn {
			color: $yellow;
		}
	}

	#portfolio {
		margin-top: 40px;
		
		
		.tile {
			height: 200px;
			background-color: red;
			/*border: 1px solid;*/

			transition: 1s;
		}


		.zoomInUp {
		    animation-name: zoomInUp;
		    animation-duration: 1s;
		}

	}
}



$breakpoints: (
  sm: 768px,
  md: 992px,
  lg: 1200px
);

@mixin break($size) {  
  @media (min-width: map-get($breakpoints, $size)) {
    @content;
  }
}

$items: 12;


@each $key, $value in $breakpoints {
  @for $i from 1 through $items {
    .gi-#{$key}-#{$i} {
      width: 100%
    }
  }
}

@each $key, $value in $breakpoints {
  @for $i from 1 through $items {
    .gi-#{$key}-#{$i} {
      @include break($key) {
        width: #{$i / $items * 100%};
        display: inline-block;
        float: left;
      }
    }
  }
}